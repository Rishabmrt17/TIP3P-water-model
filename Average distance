import numpy as np
import MDAnalysis as mda
from MDAnalysis.analysis import distances
import warnings

#Define paths to trajectory files
trajectory_path = 'traj_MD.xyz'


# Load trajectory and topology
u = mda.Universe(trajectory_path)

# select oxygen(O) and hydrogen (H) atoms
oxygen_atoms = u.select_atoms('name O')
hydrogen_atoms = u.select_atoms('name H')

# Initialize arrays to store bond distances
bond_distances_h1o = []
bond_distances_h2o = []

# Open the output file for writing
output_file = open("distance.xyz", 'w')

# Iterate through frames and calculate bond distances
for ts in u.trajectory:
    if len(hydrogen_atoms) == 2:
        # Get positions of the atoms
        h1_position = hydrogen_atoms[0].position
        h2_position = hydrogen_atoms[1].position
        o_position = oxygen_atoms[0].position

        # Calculate bond distances using Euclidean distance formula
        bond_distance_h1o = np.linalg.norm(o_position - h1_position)
        bond_distance_h2o = np.linalg.norm(o_position - h2_position)

        # Append bond distances to arrays
        bond_distances_h1o.append(bond_distance_h1o)
        bond_distances_h2o.append(bond_distance_h2o)

        # Write frame number and bond distance to the output filr
        output_file.write(f"Frame {ts.frame}: H1-O Bond Distance - {bond_distance_h1o:.2f} Å\n")
        output_file.write(f"Frame {ts.frame}: H2-O Bond Distance - {bond_distance_h2o:.2f} Å\n")
    else:
        print("Select exactly two hydrogen atoms for bond distance calculation.")

# Close the output file
output_file.close()

# Calculate the average bond distance
average_bond_distance_h1o = np.mean(bond_distances_h1o)
average_bond_distance_h2o = np.mean(bond_distances_h2o)

# Print the average bond distances
print(f"Average H1-O Bond Distance: {average_bond_distance_h1o:.2f} Å")
print(f"Average H2-O Bond Distance: {average_bond_distance_h2o:.2f} Å")

# Calculate the squared deviations from the average
squared_deviations_h1o = (bond_distances_h1o - average_bond_distance_h1o) ** 2
squared_deviations_h2o = (bond_distances_h2o - average_bond_distance_h2o) ** 2

# Calculate the variance
variance_h1o = np.mean(squared_deviations_h1o)
variance_h2o = np.mean(squared_deviations_h2o)

# Calculate the standard deviation
std_deviation_h1o = np.sqrt(variance_h1o)
std_deviation_h2o = np.sqrt(variance_h2o)

# Print the standard deviations
print(f"Standard Deviation of H1-O Bond Distance: {std_deviation_h1o:.2f} Å")
print(f"Standard Deviation of H2-O Bond Distance: {std_deviation_h2o:.2f} Å")
